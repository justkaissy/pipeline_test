<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.4.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <SetupThreadGroup guiclass="SetupThreadGroupGui" testclass="SetupThreadGroup" testname="setUp Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </SetupThreadGroup>
      <hashTree>
        <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="DEV" enabled="false"/>
        <hashTree/>
        <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="DEMO" enabled="true"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Envs" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="lmweb" elementType="Argument">
                <stringProp name="Argument.name">lmweb</stringProp>
                <stringProp name="Argument.value">api.ademo.website</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="_lmweb" elementType="Argument">
                <stringProp name="Argument.name">_lmweb</stringProp>
                <stringProp name="Argument.value">api-demo.with-rocket.science</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="fs" elementType="Argument">
                <stringProp name="Argument.name">fs</stringProp>
                <stringProp name="Argument.value">filtration.ademo.website</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="is" elementType="Argument">
                <stringProp name="Argument.name">is</stringProp>
                <stringProp name="Argument.value">integration.ademo.website</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="lbw" elementType="Argument">
                <stringProp name="Argument.name">lbw</stringProp>
                <stringProp name="Argument.value">leadbrain.ademo.website</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="seq" elementType="Argument">
                <stringProp name="Argument.name">seq</stringProp>
                <stringProp name="Argument.value">seq.ademo.website</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="cb" elementType="Argument">
                <stringProp name="Argument.name">cb</stringProp>
                <stringProp name="Argument.value">cb-api.ademo.website</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="tpm" elementType="Argument">
                <stringProp name="Argument.name">tpm</stringProp>
                <stringProp name="Argument.value">thirdpartymediator.ademo.website</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ccpa" elementType="Argument">
                <stringProp name="Argument.name">ccpa</stringProp>
                <stringProp name="Argument.value">ccpa.ademo.website</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ccra" elementType="Argument">
                <stringProp name="Argument.name">ccra</stringProp>
                <stringProp name="Argument.value">ccra.ademo.website</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="apibrain" elementType="Argument">
                <stringProp name="Argument.name">apibrain</stringProp>
                <stringProp name="Argument.value">apibrain.ademo.website</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="unsub" elementType="Argument">
                <stringProp name="Argument.name">unsub</stringProp>
                <stringProp name="Argument.value">svc-unsubscribe-api.ademo.website</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="databrain" elementType="Argument">
                <stringProp name="Argument.name">databrain</stringProp>
                <stringProp name="Argument.value">databrain.ademo.website</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="misc" elementType="Argument">
                <stringProp name="Argument.name">misc</stringProp>
                <stringProp name="Argument.value">misc-api.ademo.website</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="returning" elementType="Argument">
                <stringProp name="Argument.name">returning</stringProp>
                <stringProp name="Argument.value">api.ademo.website/login</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="valid" elementType="Argument">
                <stringProp name="Argument.name">valid</stringProp>
                <stringProp name="Argument.value">validation.ademo.website</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="remarket" elementType="Argument">
                <stringProp name="Argument.name">remarket</stringProp>
                <stringProp name="Argument.value">remarketing_worker.ademo.website</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="reschedule" elementType="Argument">
                <stringProp name="Argument.name">reschedule</stringProp>
                <stringProp name="Argument.value">reschedule_worker.ademo.website</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="testingTools" elementType="Argument">
                <stringProp name="Argument.name">testingTools</stringProp>
                <stringProp name="Argument.value">svc-testing-tools.ademo.website</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="returning2" elementType="Argument">
                <stringProp name="Argument.name">returning2</stringProp>
                <stringProp name="Argument.value">api.ademo.website/returning</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="CampaignId" elementType="Argument">
                <stringProp name="Argument.name">CampaignId</stringProp>
                <stringProp name="Argument.value">256169</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="CampaignKey" elementType="Argument">
                <stringProp name="Argument.name">CampaignKey</stringProp>
                <stringProp name="Argument.value">EEC0ABBC-D105-4702-9661-D5DBBB28C019</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="paydate1" elementType="Argument">
                <stringProp name="Argument.name">paydate1</stringProp>
                <stringProp name="Argument.value">02/15/2022</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="CurDate" elementType="Argument">
                <stringProp name="Argument.name">CurDate</stringProp>
                <stringProp name="Argument.value">2022-02-07</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Tokens" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="lbwToken" elementType="Argument">
                <stringProp name="Argument.name">lbwToken</stringProp>
                <stringProp name="Argument.value">Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6Ik1yNS1BVWliZkJpaTdOZDFqQmViYXhib1hXMCJ9.eyJhdWQiOiI3ZDlmMjgxYy04ZWFiLTRkN2EtODczNC1lOWQyOTgxYTBjZWEiLCJpc3MiOiJodHRwczovL2xvZ2luLm1pY3Jvc29mdG9ubGluZS5jb20vM2M4OTViOGEtNTc3MS00NTlhLTkwMGMtZDJkNzExNWM3YWE4L3YyLjAiLCJpYXQiOjE2NDI1NDAxNjMsIm5iZiI6MTY0MjU0MDE2MywiZXhwIjoxNjQyNTQ0MDYzLCJhaW8iOiJBVlFBcS84VEFBQUFYeWFuSEVOWVZVRkR6dk4zSXRHbGtlVlJITUVCNHB0eC9td2ZTUEU3ZTBUMklGdy8rbUdxWHVTUUdjeC96ZmpIRXgzSzFrOUNMckgzamVwOU01SDIrLzEya2RCZklCekV0dTZ3REpIYUoyYz0iLCJuYW1lIjoiS3J5c3R5bmEgVm9yb3BhaWV2YSIsIm5vbmNlIjoiYWZlMWQyNmUtMTAyNy00YzU3LTljMGUtMDlmZmI2NDI4NWFkIiwib2lkIjoiMTNjMzJhYWMtMzRhNS00MTkxLTg4OTctZTRiNDhiMGUyNWQwIiwicHJlZmVycmVkX3VzZXJuYW1lIjoia3J5c3R5bmF2QGxlYWRzbWFya2V0LmNvbSIsInJoIjoiMC5BU2dBaWx1SlBIRlhta1dRRE5MWEVWeDZxQndvbjMycmpucE5oelRwMHBnYURPb29BRFkuIiwic3ViIjoiQm5Wd0k1SUF5RkI2cmN5NmpqYTFaUm1CRWU1VF80OWswYlQ3VzlLQ1AwYyIsInRpZCI6IjNjODk1YjhhLTU3NzEtNDU5YS05MDBjLWQyZDcxMTVjN2FhOCIsInV0aSI6Ikg2bHlSLWR5cEVDVF9zcUJPZkNuQVEiLCJ2ZXIiOiIyLjAifQ.P486SXhEtVpF9nuh0dlci_dbABhTJi34oRDoxTNtOR2W57Vi1_jnKn9ohO_EFvlydXQpXRC05OB1u6cBpxizIhJ9tjlsJgKquOik1hInWTLQiLMerB6LTtMcNs6HK3kruCfSLnvIub-fCFTdlMt4TymXir0fv4l-vyHMbv1I3ZakwaIQwBKJ9l85FYpHrDzozSjNssLx0N62SANfuOG42voUmU1ekot_Nm4ELg8lGIFtBtWRmQuwKuDWEpenjfMoWm511HVV_0fOvNZOHLsKKEaQGiZ6li0qfmCARNJL45qe14BJm63ywimeCSq16CPSkCc-5sDoXlzduI4HAgiXQw</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="cbToken" elementType="Argument">
                <stringProp name="Argument.name">cbToken</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="seqToken" elementType="Argument">
                <stringProp name="Argument.name">seqToken</stringProp>
                <stringProp name="Argument.value">CfDJ8EUS2Uy1TQ9Lv06QvlJGQiaWvmX-Cu8al5djUTVG0CGOrhwUDYUvt-KJei3aicu3XCJqWzmnfl9wnVyMP8wfHVx9zHbx9DAPB7LZsqY3L6boB8qwC3Xq8HIHpAqZDDzkMKjxVn3lDQG6CEDa78se_WSoimyzWfYeJ0E2sxv8QpVR9NRSJ2_MJBvTfhv57uBEGzuMWqzPGaiy2qbwtA-x6X3mjQEWk88EDZilsCIUejktaexg385WxRmnF7tRPFinR7BTPmAVT94cW2BijBoMv-uv-wj6eAil5HT5_3gOMkvwR6VA_Re64pB_znu3JEUyu9NqxZe_UkUUehhle8XvbBIPfgqnTZKJllQBNlqGQz48uY6dye8Z8aAWPiv2A5nnYgKYjkSje5sAvkYkU2re5VqwJypAcrPLXPD8NwO94ULoVvlrg0PNKYM-gPN5NQV7v9E5JZlKQfWlEVX-7J87W8mnZVZmN0mrB8yX8rToZZxU6tuNxjRCYv4TUrheCSitLj35mXtVJtCGZwrhli84yx9nPuUapDYZpLmfiOiTCSO1T6zKfDs8fxZbeahDzqY8PzZPSHPondlX0YG7f47_pRsF0R1rqElb4Dw1zhFU2PAwUpFkcsZvxWQCpWLMlQ_9ZQoFzgLTLP3vzyCtX_K2r186LhE7olLRnCelV5YkbGs-uQkzUw6feJVpUKJ34a4dI02-dEjd5b9R54pLt3ZXWHedM2zLDvFZgwCwt4p8s6aQJQKpHqOxa2KI8WYqpgKV84PHpthWXbDcyzIKB755UX9zcR8DkYjy-mAu-PugmNmcZLmChK4LYw6xnHsgrnEO7bH9FAissz0HtvtQGXiY_fhPwIgRrwcAanB1K2XDPt7X4a8d1V1GF2AXy3eUjgXsLzJRTjFxJmCroNTu9vLQNrSvROxqeKmqhbISM9lUxZknc-OGESFtL9N4P3N0_daRM8C3YwBLdVto4Sf5tDHwlZCNO6aleJr4DkimSAI05k3tvYOcrC6xjuvt_fAbnWW52JW50WLcAjR4aEutSfhoS5OQH500iqK56aqQSRianUjottT_mtKK9iS6Iqh_mHQbcWlPkrnbchKiauOGm2qWKpKN3CXoFKc0ctEe4ge7JBXkZAIG08V57N4Dz0sD5MtXNLn4zl0y9hLqP4kReFU-MgzOSJFlVSkznUxotfk2OEBMDfr5hwxltRg1yf3sa1LY0L3CssC8-srXAjGwVZZkQKMu_3a0qakZK5UR-RNGq0hfDhyIPzYOgbIF3NeKx-H_k51bcsU3gljIv0t7HcK5esHujbSawxhQQ3mGDSMaJPK4dspkdPZPHE5_Wc0PW4ZWDn55lc9gHD0rIJJHbCoPKYfvcFofgMj6FG-ruT_aj784RRdMSb3deQ0VXNttaVsMDwdotMbY766i658yaZhUAO3UgT8PWGyEd3h1-HnkcBbqZ2fzOh-B5CgtQKYzqZSdWTPq5Z4BxjSczoPgFxFqdsF3Kr_EkhOY5Bsa6RuTXKQucizBMC5N1opVyvnvhxMXzb5tD4rJKtXid8bTc0JHlnVndL8-gPiEI3B6xWftYSrK_-uWaHMTcyK-3VJstH5dl0JIdHk98pSGB7D0SoBiGtMUn786hpFl0EkxiULYLyMHbHaVsnY9mO7NcOmpMs7AHkME_usF3yeRKhVwPhOrNCSBoriZ6g46PVZkrrUx1s1OkFW_-efk2VjpVvsHdEbJ0fVLUJwxre6FiQhYWYWm5m1MfbPF8fyC0J9oJF-UdW6gyjmvhDEIQWLGFoCIpvwio6hNVb3rbTzCjupBLDrBE1doHSN0vzmj0v7tzZeGrQizwKJngq6BO0tnBBmancM3lSWiDDWhyZ1uyvudbbaMfoTJzCIRGbG8vVkRP5OwcUGjkIQfwBtcnTkjt9ggLdVyscWT9aQkGqYw_xGs2FBMJVrnJJ47JT7hXZg7XORmchRsoYGaLrJVdRpvBldJIMxMvzzmuF_yI7cuSoXVthKSXq9-u3XOvoOiD7OZ-_nLMA7HaJsqlZWSENjc-h7Divgze5t4YoIdGYa9tgjoPRkWi-HH2D5HB5n6Wj-aO38vz5NTnq443Ia9qXQGLxFP_hXHcwLSRFgbwSMqiu0H2gwMfmTI4-au9h6lkEaCaFE2_8DRIuJumesOsC2iL2tWKfwsK3-kR2YzBbmnKDNlOXEEi4jJoPrinHq84xNLDYFA9cJqudsDVRr6wBLOCR9uLoJmtk3fg2SA4raeZZwYstz2AOQmHKET9T6KVG6XYMD5teqRoSeVjIVC-z24ZJo39hWE_pabzBuwiZatjB-NwLkaY0n_hoVrIaPHhwzNlTPsTy8M0yiqgx-7iMwfvDEypzJ9yuW0w2HZuoMKzUF-aOaks8kjkoRWdWeWFBHHgLfxIPVC-Ba_8TCbKS_zT3ZjnlYyJnIS5cDv4gY7ihhtc0cRHe3feCS4ELobWykPIMuHMYEDGdErE5wcEUj6PbQEBmYUllLjP2Pz8wHoDCCGLYRW-LSR7ZCvETMGgOGMMFi3IqZX-yvncuPpm-xxdRYQ4ZDF2_7KHpdJghlODb6O4OctJa-7K-EZ4Nwd8BeHG3ffARUjz8k43CwvnSmhF1vCnryfmfbljo0xtM17XB0q3DgqynbhzU60MixeG_e9c-jd8x9gBrd-xlrOm54C66DfpiAQdqDnLwflTxgI_gjqj_4hM-KCK9Ui7c3tCgHVVYHecH1UYWrBqttrsNU5mBWXkREVZxQTLy6y9CnROYBtHU9wx-1S7qngdWv-7aJnLtiuyMPZRXejw6vDS488bWhTC4uEe4YQ9QQzs_oXH2qSdLfpICcCiJ-rOdWNw2y3DItJxQUl9omnod9E3NRJ4AAwXHVnYvfZl-AxwOKk0VawGnwNSrjizJbMElZhNEPeJiWDK3r2qeaHkFkrdxGyK77l4jtc4A</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="seqDomain" elementType="Argument">
                <stringProp name="Argument.name">seqDomain</stringProp>
                <stringProp name="Argument.value">.ademo.website</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="SQL creds" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="SqlHostLeadsmarket" elementType="Argument">
                <stringProp name="Argument.name">SqlHostLeadsmarket</stringProp>
                <stringProp name="Argument.value">jdbc:sqlserver://sql-demo.with-rocket.science:1433;DatabaseName=leadsmarket</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SqlUsername" elementType="Argument">
                <stringProp name="Argument.name">SqlUsername</stringProp>
                <stringProp name="Argument.value">qa_kris</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SqlPassword" elementType="Argument">
                <stringProp name="Argument.name">SqlPassword</stringProp>
                <stringProp name="Argument.value">gaNbzQy3ZEhvomVjo0P7</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="Leadsmarket JDBC Connection" enabled="true">
            <boolProp name="autocommit">true</boolProp>
            <stringProp name="checkQuery"></stringProp>
            <stringProp name="connectionAge">5000</stringProp>
            <stringProp name="connectionProperties"></stringProp>
            <stringProp name="dataSource">leadsmarket</stringProp>
            <stringProp name="dbUrl">jdbc:sqlserver://sql-demo.with-rocket.science:1433;DatabaseName=leadsmarket</stringProp>
            <stringProp name="driver">com.microsoft.sqlserver.jdbc.SQLServerDriver</stringProp>
            <stringProp name="initQuery"></stringProp>
            <boolProp name="keepAlive">true</boolProp>
            <stringProp name="password">gaNbzQy3ZEhvomVjo0P7</stringProp>
            <stringProp name="poolMax">0</stringProp>
            <boolProp name="preinit">false</boolProp>
            <stringProp name="timeout">10000</stringProp>
            <stringProp name="transactionIsolation">DEFAULT</stringProp>
            <stringProp name="trimInterval">60000</stringProp>
            <stringProp name="username">qa_kris</stringProp>
          </JDBCDataSource>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Lead" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="Ok" enabled="true"/>
        <hashTree>
          <com.blazemeter.jmeter.RandomCSVDataSetConfig guiclass="com.blazemeter.jmeter.RandomCSVDataSetConfigGui" testclass="com.blazemeter.jmeter.RandomCSVDataSetConfig" testname="Lead data" enabled="true">
            <stringProp name="filename">/Users/kristinavoropaieva/./Google Drive/Shared drives/Jmeter/Data/DataGen_InstallmentUS.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="variableNames">RequestedAmount,FirstName,LastName,Email,PhoneHome,PhoneCell,PhoneWork,SSN,IncomeType,MonthsEmployed,PayFrequency,MonthlyIncome,MonthsAtBank,BankAccountNumber,TCPAConsentText,BankName,DriversLicense,DriversLicenseState,BankABA,BankAccountType,ZipCode,MonthsAtAddress,Address1,DOB</stringProp>
            <boolProp name="randomOrder">true</boolProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="rewindOnTheEndOfList">true</boolProp>
            <boolProp name="independentListPerThread">false</boolProp>
          </com.blazemeter.jmeter.RandomCSVDataSetConfig>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Live.aspx" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.ademo.website</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/post/live.aspx?RequestedAmount=${RequestedAmount}&amp;FlexibleAmount=1&amp;MinLoanAmount=100&amp;Credit=EXCELLENT&amp;Email=${Email}&amp;FirstName=${FirstName}&amp;LastName=${LastName}&amp;PhoneHome=${PhoneHome}&amp;TCPAConsentText=Clicking%20%E2%80%9CCONTINUE%E2%80%9D%20is%20my%20e-signature%20authorizing%20you%20to%20share%20my%20information%20with%20lenders%20or%20lending%20partners,%20lender-networks%20and%20other%20marketing%20partners%20to%20send%20me%20SMS,%20autodialed%20or%20prerecorded%20messages.%20I%20understand%20consent%20is%20not%20required%20to%20obtain%20a%20loan.By%20clicking%20%E2%80%9CREQUEST%20CASH%E2%80%9D,%20I%20agree%20to%20the%20Credit%20Authorization%20Agreement,%20E-Consent,%20Privacy%20Policy%20and%20Terms%20of%20Use.&amp;ZipCode=49106&amp;Address1=TitleAccepted&amp;MonthsAtAddress=${MonthsAtAddress}&amp;OwnHome=1&amp;OwnCar=0&amp;ActiveMilitary=0&amp;DOB=5/6/1999&amp;DriversLicense=${DriversLicense}&amp;DriversLicenseState=${DriversLicenseState}&amp;IncomeType=${IncomeType}&amp;MonthlyIncome=${MonthlyIncome}&amp;EmployerName=werwe&amp;MonthsEmployed=${MonthsEmployed}&amp;DirectDeposit=0&amp;PayFrequency=${PayFrequency}&amp;PayDate1=${paydate1}&amp;BankAccountType=${BankAccountType}&amp;BankABA=${BankABA}&amp;BankAccountNumber=${BankAccountNumber}&amp;BankName=${BankName}&amp;MonthsAtBank=${MonthsAtBank}&amp;SSN=${SSN}&amp;campaignid=${CampaignId}&amp;leadtypeid=19&amp;ResponseAsync=0&amp;responsetype=json&amp;PhoneWork=${PhoneHome}&amp;formCaptchaToken=5Sssd09VSDH09SPf&amp;captchaSiteKeyId=id6</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1994069489">verify.aspx</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">6</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">lluid</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.LeadID</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="{&quot;data&quot;" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="not Ok" enabled="true"/>
        <hashTree>
          <com.blazemeter.jmeter.RandomCSVDataSetConfig guiclass="com.blazemeter.jmeter.RandomCSVDataSetConfigGui" testclass="com.blazemeter.jmeter.RandomCSVDataSetConfig" testname="Lead data" enabled="true">
            <stringProp name="filename">/Users/kristinavoropaieva/./Google Drive/Shared drives/Jmeter/Data/DataGen_InstallmentUS.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="variableNames">RequestedAmount,FirstName,LastName,Email,PhoneHome,PhoneCell,PhoneWork,SSN,IncomeType,MonthsEmployed,PayFrequency,MonthlyIncome,MonthsAtBank,BankAccountNumber,TCPAConsentText,BankName,DriversLicense,DriversLicenseState,BankABA,BankAccountType,ZipCode,MonthsAtAddress,Address1,DOB</stringProp>
            <boolProp name="randomOrder">true</boolProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="rewindOnTheEndOfList">true</boolProp>
            <boolProp name="independentListPerThread">false</boolProp>
          </com.blazemeter.jmeter.RandomCSVDataSetConfig>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Live.aspx" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.ademo.website</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/post/live.aspx?RequestedAmount=${RequestedAmount}&amp;FlexibleAmount=1&amp;MinLoanAmount=100&amp;Credit=EXCELLENT&amp;Email=${Email}&amp;FirstName=${FirstName}&amp;LastName=${LastName}&amp;PhoneHome=${PhoneHome}&amp;TCPAConsentText=Clicking%20%E2%80%9CCONTINUE%E2%80%9D%20is%20my%20e-signature%20authorizing%20you%20to%20share%20my%20information%20with%20lenders%20or%20lending%20partners,%20lender-networks%20and%20other%20marketing%20partners%20to%20send%20me%20SMS,%20autodialed%20or%20prerecorded%20messages.%20I%20understand%20consent%20is%20not%20required%20to%20obtain%20a%20loan.By%20clicking%20%E2%80%9CREQUEST%20CASH%E2%80%9D,%20I%20agree%20to%20the%20Credit%20Authorization%20Agreement,%20E-Consent,%20Privacy%20Policy%20and%20Terms%20of%20Use.&amp;ZipCode=49106&amp;Address1=TitleAccepted&amp;MonthsAtAddress=${MonthsAtAddress}&amp;OwnHome=1&amp;OwnCar=0&amp;ActiveMilitary=0&amp;DOB=5/6/1999&amp;DriversLicense=${DriversLicense}&amp;DriversLicenseState=${DriversLicenseState}&amp;IncomeType=${IncomeType}&amp;MonthlyIncome=${MonthlyIncome}&amp;EmployerName=werwe&amp;MonthsEmployed=${MonthsEmployed}&amp;DirectDeposit=0&amp;PayFrequency=${PayFrequency}&amp;PayDate1=${paydate1}&amp;BankAccountType=${BankAccountType}&amp;BankABA=${BankABA}&amp;BankAccountNumber=${BankAccountNumber}&amp;BankName=${BankName}&amp;MonthsAtBank=${MonthsAtBank}&amp;SSN=${SSN}&amp;campaignid=${CampaignId}&amp;leadtypeid=19&amp;ResponseAsync=0&amp;responsetype=json&amp;PhoneWork=${PhoneHome}&amp;formCaptchaToken=5Sssd09VSDH09SPf&amp;captchaSiteKeyId=id6</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1994069489">verify.aspx</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">6</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">lluid</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.LeadID</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="{&quot;data&quot;" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.CampaignID</stringProp>
              <stringProp name="EXPECTED_VALUE">258199</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">false</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
